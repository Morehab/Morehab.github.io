<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Comment: Notes on the ALBUMs</title>
    <link href="/2020/07/09/Comment-Notes-on-the-ALBUMs/"/>
    <url>/2020/07/09/Comment-Notes-on-the-ALBUMs/</url>
    
    <content type="html"><![CDATA[<p>这篇blog用于记录我对于最近听的各种专辑的小感想，可能是记录乐队背景信息，可能是评论下artist的身材，也可能只是一句话的好恶。随便写点，主要目的仅在于形式上留点记录。</p><h2 id="Morphine"><a href="#Morphine" class="headerlink" title="Morphine"></a>Morphine</h2><p>乐队背景：</p><blockquote><p>1989年，Morphine乐队成立于美国马萨诸塞州剑桥市，发起人是<strong>歌手兼贝司手</strong>（所谓的贝司只有两根弦，有时是一根贝司弦加两根吉他弦）Mark Sandman 和中低音萨克斯手Dana Colley，后来又找来了鼓手Jerome Deupree，鼓手后更换为Billy Conway。<strong>乐队没有吉他手。</strong></p></blockquote><p>乐队把自己的风格称为“<strong>Low Rock</strong>”（简约、音阶低沉），与传统的“<strong>Power Trio</strong>”不同。</p><blockquote><p>Power Trio(in British English):</p><p>摇滚乐中的一种形式，强调贝斯、鼓、吉他的器乐演奏，没有节奏吉他、键盘，同时削减人声的重要性。</p><p>主音吉他（lead guitar）：主要负责solo（单音旋律），音质明亮、持久，常使用高输出的拾音器以及各类效果器、压缩器。</p><p>节奏吉他（rhythm guitar）: 负责节奏和和声，多弹奏中低音，通常采用配置双线圈拾音器的吉他，音色饱满，弦较粗较硬。</p></blockquote><h3 id="Like-Swimming-1997"><a href="#Like-Swimming-1997" class="headerlink" title="Like Swimming(1997)"></a>Like Swimming(1997)</h3><p>没有吉他的乐队，贝斯和萨克斯原地起飞。vocal是次要的、类似于合成器音色一样的存在，但Sandman的演绎非常带感。</p><p>嬉皮，电子，迷幻，爵士。Like Swimming是他们比较平和的一张专，质感像果味电子烟或者LSD。并不是很摇滚的一张概念专辑。</p><h2 id="刘柏辛Lexie"><a href="#刘柏辛Lexie" class="headerlink" title="刘柏辛Lexie"></a>刘柏辛Lexie</h2><h3 id="无限意识Meta-Ego-2019"><a href="#无限意识Meta-Ego-2019" class="headerlink" title="无限意识Meta Ego(2019)"></a>无限意识Meta Ego(2019)</h3><p>不知道说啥。制作听着很舒服，词一般，曲一般。就是都差点意思。</p><p>整张专的理念大概是围绕“存在”、“世界”、“神秘”，制作方式几乎都相同，迷幻的beat，中英文交叉的flow里旋律很多，再加上几层带电的人声当和声飘在后面。</p><h2 id="JABBERLOOP"><a href="#JABBERLOOP" class="headerlink" title="JABBERLOOP"></a>JABBERLOOP</h2><p>乐队背景：</p><blockquote><p>日本京都的club jazz乐队，5人组成（萨克斯，小号，键盘，bass/guitar，鼓）。</p><p>专辑《Ooparts》获得了日本爵士乐排行榜第一。</p><p>来台湾演出且和蛋堡合作过，参与了《最终幻想》的主题曲录制。</p></blockquote><h3 id="台湾特选辑"><a href="#台湾特选辑" class="headerlink" title="台湾特选辑"></a>台湾特选辑</h3><p>每一首都很棒！日式爵士味很浓。<br>但平行来看相似度太高，全专听完有点亏。</p><h2 id="Doja-Cat"><a href="#Doja-Cat" class="headerlink" title="Doja Cat"></a>Doja Cat</h2><p>之前高三疯狂听emo的时候曾经被推过No Police和So High，但不是特别感兴趣。这次再听是因为Say So被我在b站上关注的up主拍了相关视频。</p><h3 id="Hot-Pink-2019"><a href="#Hot-Pink-2019" class="headerlink" title="Hot Pink(2019)"></a>Hot Pink(2019)</h3><p>Hot Pink是我这几天听得最多的专辑，大概是因为Doja实在太辣了。这张专几乎全部是sex talk，但Doja能写出12首sex talk且不重复，也挺厉害的。</p><p>这张专的beat都挺好听的，且Doja的flow写得真的很棒，节奏变化、韵脚都非常流畅且有意思。最吸引我的是Doja的声线，既可以唱娃娃音的vocal，也可以把音色拉到粗哑唱rap，对于不同词语的音色处理很绝。</p>]]></content>
    
    
    <categories>
      
      <category>Music</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Music</tag>
      
      <tag>Comment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LiquidFun文档简记</title>
    <link href="/2020/07/08/LiquidFun%E6%96%87%E6%A1%A3%E7%AE%80%E8%AE%B0/"/>
    <url>/2020/07/08/LiquidFun%E6%96%87%E6%A1%A3%E7%AE%80%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="0-Pre-Everything"><a href="#0-Pre-Everything" class="headerlink" title="0. Pre-Everything"></a>0. Pre-Everything</h2><h2 id="1-Shape"><a href="#1-Shape" class="headerlink" title="1. Shape"></a>1. Shape</h2><p>用于碰撞检测，在b2Fixture创建时会由b2World自动创建。</p><ul><li>第一种：通过fixture与body绑定，随body进行rigid moves。</li><li>第二种：通过顶点坐标的形式存在于world中，只能通过手动设置坐标进行移动。</li></ul><p>（1）分类：</p><pre><code class="hljs C++"><span class="hljs-keyword">enum</span> Type &#123;   e_circle = <span class="hljs-number">0</span>, e_edge = <span class="hljs-number">1</span>,   e_polygon = <span class="hljs-number">2</span>, e_chain = <span class="hljs-number">3</span>,   e_typeCount = <span class="hljs-number">4</span> &#125;</code></pre><p>（2）子类：b2ChainShape, b2CircleShape, …Edge…, …Polygon…。</p><p>（3）数据成员：m_type, m_radius。</p><p>（4）public成员函数：</p><p><img src="C:%5CUsers%5Cybr19%5CDocuments%5C100%_MOREHAB%5CFiles%5CBLOGGER%5Csource%5Cimg%5Cblog%5Cmember_f.png" srcset="/img/loading.gif" alt="image-20200709114719125"></p><h3 id="1-1-Circle"><a href="#1-1-Circle" class="headerlink" title="1.1 Circle"></a>1.1 Circle</h3><pre><code class="hljs c++">b2CircleShape <span class="hljs-built_in">circle</span>;  <span class="hljs-comment">//实心</span><span class="hljs-built_in">circle</span>.m_p.Set(<span class="hljs-number">2.0f</span>, <span class="hljs-number">3.0f</span>); <span class="hljs-comment">//圆心位置</span><span class="hljs-built_in">circle</span>.m_radius = <span class="hljs-number">0.5f</span>; <span class="hljs-comment">//半径必须大于零</span></code></pre><h3 id="1-2-Polygon"><a href="#1-2-Polygon" class="headerlink" title="1.2 Polygon"></a>1.2 Polygon</h3><p>Def: 实心凸（连接内部两点的线段不与边交叉）多边形，&gt;=3边。</p><p>通过CCW（逆时针winding）填充：</p><blockquote><p>多边形填充有两种模式：alternate和winding。</p><p><strong>alternate</strong>: </p><p>显示器的每个扫描行都是从左到右扫描，系统只填充每个扫描行遇到的多边形的奇数边和偶数边之间的部分，不填充偶数边到奇数边之间的部分。</p><p><strong>winding</strong>: </p><p>用一笔画一个多边形，分clockwise或counterclockwise。</p><p>画一条直线M，对于与它相交的线段：从直线M的左边到右边为clockwise，count+1；从直线M的右边到左边为counterclockwise，count-1。<br>判断一个区域E是否要被填充：从该区域画一线段M到整个多边型区域外，按照上面的方法对<strong>与该线相交的多边形的边</strong>进行count的计数，如果count非零则区域E要被填充，否则不填充。  </p></blockquote><p>从shape继承了radius，用于在多边形周围创造skin，防止tunneling。</p><p>这会导致形状之间有小gap，可以将visual表示做得大一点。</p><p><strong>成员都是public的</strong>， 初始化可传入一个vertex数组：</p><pre><code class="hljs C++"><span class="hljs-comment">///至多b2_maxPolygonVertices个顶点</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">b2PolygonShape</span> :</span> <span class="hljs-keyword">public</span> b2Shape&#123;<span class="hljs-keyword">public</span>:b2PolygonShape();    <span class="hljs-comment">/// Implement b2Shape.</span><span class="hljs-function">b2Shape* <span class="hljs-title">Clone</span><span class="hljs-params">(b2BlockAllocator* allocator)</span> <span class="hljs-keyword">const</span></span>;<span class="hljs-comment">/// @see b2Shape::GetChildCount</span><span class="hljs-function">int32 <span class="hljs-title">GetChildCount</span><span class="hljs-params">()</span> <span class="hljs-keyword">const</span></span>;<span class="hljs-comment">/// 用顶点数组创造多边形。</span><span class="hljs-comment">/// 边数count属于[3, b2_maxPolygonVertices].</span><span class="hljs-comment">/// 即时传入的点能构成多边形，点也可能被重排。</span><span class="hljs-comment">/// 共线的点被处理但不被移除。</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Set</span><span class="hljs-params">(<span class="hljs-keyword">const</span> b2Vec2* points, int32 count)</span></span>;<span class="hljs-comment">/// 以原点为中心，平行于坐标轴。</span><span class="hljs-comment">/// hx the half-width，hy the half-height.</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetAsBox</span><span class="hljs-params">(float32 hx, float32 hy)</span></span>;<span class="hljs-comment">/// hx the half-width，hy the half-height.</span><span class="hljs-comment">/// center：中心坐标</span><span class="hljs-comment">/// angle：旋转角度</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetAsBox</span><span class="hljs-params">(float32 hx, float32 hy, <span class="hljs-keyword">const</span> b2Vec2&amp; center, float32 angle)</span></span>;<span class="hljs-comment">/// @see b2Shape::TestPoint</span><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">TestPoint</span><span class="hljs-params">(<span class="hljs-keyword">const</span> b2Transform&amp; transform, <span class="hljs-keyword">const</span> b2Vec2&amp; p)</span> <span class="hljs-keyword">const</span></span>;<span class="hljs-comment">// @see b2Shape::ComputeDistance</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ComputeDistance</span><span class="hljs-params">(<span class="hljs-keyword">const</span> b2Transform&amp; xf, <span class="hljs-keyword">const</span> b2Vec2&amp; p, float32* distance, b2Vec2* normal, int32 childIndex)</span> <span class="hljs-keyword">const</span></span>;<span class="hljs-comment">/// Implement b2Shape.</span><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">RayCast</span><span class="hljs-params">(b2RayCastOutput* output, <span class="hljs-keyword">const</span> b2RayCastInput&amp; input,</span></span><span class="hljs-function"><span class="hljs-params"><span class="hljs-keyword">const</span> b2Transform&amp; transform, int32 childIndex)</span> <span class="hljs-keyword">const</span></span>;<span class="hljs-comment">/// @see b2Shape::ComputeAABB</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ComputeAABB</span><span class="hljs-params">(b2AABB* aabb, <span class="hljs-keyword">const</span> b2Transform&amp; transform, int32 childIndex)</span> <span class="hljs-keyword">const</span></span>;<span class="hljs-comment">/// @see b2Shape::ComputeMass</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ComputeMass</span><span class="hljs-params">(b2MassData* massData, float32 density)</span> <span class="hljs-keyword">const</span></span>;<span class="hljs-comment">/// Get the vertex count.</span><span class="hljs-function">int32 <span class="hljs-title">GetVertexCount</span><span class="hljs-params">()</span> <span class="hljs-keyword">const</span> </span>&#123; <span class="hljs-keyword">return</span> m_count; &#125;<span class="hljs-comment">/// Get a vertex by index.</span><span class="hljs-function"><span class="hljs-keyword">const</span> b2Vec2&amp; <span class="hljs-title">GetVertex</span><span class="hljs-params">(int32 index)</span> <span class="hljs-keyword">const</span></span>;<span class="hljs-comment">/// 验证凸性，耗时很长。</span><span class="hljs-comment">/// @returns true if valid</span><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">Validate</span><span class="hljs-params">()</span> <span class="hljs-keyword">const</span></span>;b2Vec2 m_centroid; <span class="hljs-comment">//初始为0</span>b2Vec2 m_vertices[b2_maxPolygonVertices]; b2Vec2 m_normals[b2_maxPolygonVertices];int32 m_count; <span class="hljs-comment">//b2_polygonRadius</span>    <span class="hljs-comment">//m_type = e_polygon;</span><span class="hljs-comment">//m_radius = b2_polygonRadius;</span>&#125;;</code></pre><h3 id="1-3-Edge"><a href="#1-3-Edge" class="headerlink" title="1.3 Edge"></a>1.3 Edge</h3><p>线段，用于做静态的环境。能与circle,polygon碰撞，但不能与线段碰撞。</p><p>（这是由于碰撞系统要求两个物体至少一个有体积，线段无体积。）</p><pre><code class="hljs armasm"><span class="hljs-keyword">b2Vec2 </span><span class="hljs-built_in">v1</span>(<span class="hljs-number">0</span>.<span class="hljs-number">0</span>f, <span class="hljs-number">0</span>.<span class="hljs-number">0</span>f), <span class="hljs-built_in">v2</span>(<span class="hljs-number">1</span>.<span class="hljs-number">0</span>f, <span class="hljs-number">0</span>.<span class="hljs-number">0</span>f)<span class="hljs-comment">;</span><span class="hljs-keyword">b2EdgeShape </span>edge<span class="hljs-comment">;</span><span class="hljs-symbol">edge.Set</span>(<span class="hljs-built_in">v1</span>, <span class="hljs-built_in">v2</span>)<span class="hljs-comment">;  //初始化</span></code></pre><p>通常游戏世界会涉及多条线段连接而成的线。当物体在其上滑动时，可能会与线段顶点发声ghost collision，造成internal collision normal。</p><p>于是有如下机制：使用命令</p><pre><code class="hljs C++">b2Vec2 v0<span class="hljs-number">-3</span>(x0<span class="hljs-number">-3</span>,y0<span class="hljs-number">-3</span>);b2EdgeShape edge;edge.Set(v1, v2);   edge.m_hasVertex0 = <span class="hljs-literal">true</span>;   edge.m_hasVertex3 = <span class="hljs-literal">true</span>;   edge.m_vertex0 = v0;   edge.m_vertex3 = v3;</code></pre><p>存入临近的ghost vertice，但这有点麻烦。</p><p>![image-20200708114649294](C:\Users\ybr19\Documents\100%_MOREHAB\Files\BLOGGER\source\img\blog\ghost collision.png)</p><p>于是又有如下机制：将边缝合为chain shapes。这可以防止ghost collision，并提供<strong>双边碰撞（two-sided collision, 我猜测指的是在两端的碰撞）。</strong></p><p><img src="C:%5CUsers%5Cybr19%5CDocuments%5C100%_MOREHAB%5CFiles%5CBLOGGER%5Csource%5Cimg%5Cblog%5C2-sided.png" srcset="/img/loading.gif" alt="Chain shape"></p><pre><code class="hljs C++"><span class="hljs-comment">// This a chain shape with isolated vertices</span>  b2Vec2 vs[<span class="hljs-number">4</span>]; <span class="hljs-comment">//Set them</span>  b2ChainShape chain;  chain.CreateChain(vs, <span class="hljs-number">4</span>);</code></pre><p>对于滚动的游戏世界，可以使用ghost vertices将chain连接在一起。</p><pre><code class="hljs C++"><span class="hljs-comment">//Install ghost vertices</span>chain.SetPrevVertex(b2Vec2(<span class="hljs-number">3.0f</span>, <span class="hljs-number">1.0f</span>));chain.SetNextVertex(b2Vec2(<span class="hljs-number">-2.0f</span>, <span class="hljs-number">0.0f</span>));</code></pre><p>还可以创造<strong>loop</strong>：</p><pre><code class="hljs C++"><span class="hljs-comment">// first and last vertices are connected</span>b2ChainShape chain;chain.CreateLoop(vs, <span class="hljs-number">4</span>);</code></pre><p>代码<strong>不支持chain shape之间出现交叉</strong>，且vertices之间过近也可能导致问题，故最好保证边长于b2_linearSlop = 5mm。</p><blockquote><p>/// A small length used as a collision and constraint tolerance. Usually it is<br>/// chosen to be numerically significant, but visually insignificant.<br>#define b2_linearSlop            0.005f</p></blockquote><p>在chain中的边都被视作child shape，可以通过指标访问。当chain shape与body连接时，每个边在broad-phase碰撞树中都会得到自己的bounding box。</p><pre><code class="hljs reasonml"><span class="hljs-comment">// Visit each child edge.</span>for (<span class="hljs-built_in">int32</span> i = <span class="hljs-number">0</span>; i &lt; chain.<span class="hljs-constructor">GetChildCount()</span>; ++i)&#123;   b2EdgeShape edge;   chain.<span class="hljs-constructor">GetChildEdge(&amp;<span class="hljs-params">edge</span>, <span class="hljs-params">i</span>)</span>;   …&#125;</code></pre><h3 id="1-5-Transform"><a href="#1-5-Transform" class="headerlink" title="1.5 Transform"></a>1.5 Transform</h3><p>transform类用于表示刚体的位置，在Math.h中定义。</p><p>数据成员：</p><pre><code class="hljs 1c">b2Vec2 p; <span class="hljs-comment">//translation</span>b2Rot q; <span class="hljs-comment">//rotation</span><span class="hljs-comment">//Rot类含两个数据成员：旋转角的s和c。</span></code></pre><h3 id="1-4-几何查询"><a href="#1-4-几何查询" class="headerlink" title="1.4  几何查询"></a>1.4  几何查询</h3><h4 id="1-4-1-查询点与形状的重合"><a href="#1-4-1-查询点与形状的重合" class="headerlink" title="1.4.1  查询点与形状的重合"></a>1.4.1  查询点与形状的重合</h4><pre><code class="hljs reasonml"><span class="hljs-built_in">bool</span> hit = shape-&gt;<span class="hljs-constructor">TestPoint(<span class="hljs-params">transform</span>, <span class="hljs-params">point</span>)</span>;</code></pre><p>edge和chain（包括loop）总会返回false。</p><h4 id="1-4-2-进行ray-cast"><a href="#1-4-2-进行ray-cast" class="headerlink" title="1.4.2  进行ray cast"></a>1.4.2  进行ray cast</h4><blockquote><p>ray cast（光线投射）：</p><p>用于3D数据场的可视化，是体绘制中的一种处理方式：</p><p>向三维数据场投射出光线，然后沿着光线方向积分，数值化方法为由前往后或由后向前合成。</p><p>（不是很懂）</p></blockquote><p>在这里指用一束光线打到shape上，得到第一个交点和对应的向量。若光线从形状内部触发，则标记为未击中。</p><p><img src="C:%5CUsers%5Cybr19%5CDocuments%5C100%_MOREHAB%5CFiles%5CBLOGGER%5Csource%5Cimg%5Cblog%5Cray_cast.png" srcset="/img/loading.gif" alt="image-20200709140659310"></p><h4 id="1-4-3-两个图形的重合"><a href="#1-4-3-两个图形的重合" class="headerlink" title="1.4.3 两个图形的重合"></a>1.4.3 两个图形的重合</h4><pre><code class="hljs reasonml"><span class="hljs-built_in">bool</span> b2<span class="hljs-constructor">TestOverlap(<span class="hljs-params">const</span> <span class="hljs-params">b2Shape</span> <span class="hljs-operator">*</span><span class="hljs-params">sA</span>, <span class="hljs-params">int32</span> <span class="hljs-params">indexA</span>, <span class="hljs-params">const</span> <span class="hljs-params">b2Shape</span> <span class="hljs-operator">*</span><span class="hljs-params">sB</span>, <span class="hljs-params">int32</span> <span class="hljs-params">indexB</span>, <span class="hljs-params">const</span> <span class="hljs-params">b2Transform</span> &amp;<span class="hljs-params">xfa</span>, <span class="hljs-params">const</span> <span class="hljs-params">b2Transform</span> &amp;<span class="hljs-params">xfb</span>)</span>;<span class="hljs-comment">//index指对于chain shapes的child index。</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>Coding</category>
      
      <category>LiquidFun</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Coding</tag>
      
      <tag>LiquidFun</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Diary: 2020/07/08</title>
    <link href="/2020/07/08/Diary-2020-07-08/"/>
    <url>/2020/07/08/Diary-2020-07-08/</url>
    
    <content type="html"><![CDATA[<p>好久没更新博客内容了……今天就记一些很杂的感想。</p><p>昨天更新了微博的配置，然后又刷手机看无聊视频（我真真是无聊之王）到很晚。<strong>所以今天开始立志早睡</strong>。买了小闹钟，预备23：00手机、iPad关机，坚决执行早睡早起的条令。</p><p>明天开始固定去自习室，大作业再不做我真就要糊了。</p><p>申请了网易音乐人，通过了验证但还没上传作品，正在纠结是先传个Demo还是等录好音了再传。</p><p>真的很感谢听摇滚、看诗、看书的这位大哥，每天都以身作则，激励我去听经典作品、去读诗、去了解和思考，否则我这种懒狗估计也就是每天打打游戏就过了。</p><p>今天上素描课的时候很困，三分之一的时间在听素描老师和来的朋友闲扯，讲新一代艺术工作者的发展前景、深入分析（或辩护）自己某天与某个人发生的一场争吵。我非常羡慕他们拥有的高谈阔论的能力。此种能力的缺乏往往会让我觉得讨论艺术、生活、价值、道德这类宏观话题远远超出了我的智力范畴，从而无法进行深入的交谈。同样，我也很敬佩他们对于尴尬情绪的巧妙处理。</p><p>最近看景物、人脸变成了一件有趣的事，可以分析素描结构、看光影的移动、颜色的明暗深浅。我自觉对于视觉美感有了更明晰的认识。</p><p>明天开始，把听歌看书作为一件重要的日程，往博客里不定期传一些对专辑的观后感。</p>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Diary</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Diary: 2020/07/04</title>
    <link href="/2020/07/04/Diary-2020-7-4/"/>
    <url>/2020/07/04/Diary-2020-7-4/</url>
    
    <content type="html"><![CDATA[<p>今天更新了头图、社交号、categories、icon等等一系列设置。</p><p>依然没有开始写大作业，sigh。明天一定。</p><p>看到了一个腾讯与一堆音乐学院与清华合作的音乐比赛，决定参加，得把正式录音提上日程了。</p><p>玩会儿OPUS，看会儿书，睡了。</p>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Diary</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Diary: 2020/07/03</title>
    <link href="/2020/07/03/Diary-2020-07-03/"/>
    <url>/2020/07/03/Diary-2020-07-03/</url>
    
    <content type="html"><![CDATA[<p>假期已经过去 <strong>半 个 月</strong>，成绩出了，音梦计划的结果也终于下来了。</p><p>我这半个月完全就是废人生活……懒得听新歌，懒得看新书，懒得做音乐，懒得思考。躺在床上看完全没有意义的各种无聊媒体商品，时间过得比做白日梦还快。然后就一点一点放松神经，脑细胞演化为空心肥皂泡，掉进可耻的资本主义消费陷阱里。</p><p>我完全赞同假期拿来摸各种鱼，但还是想摸漂亮一点别致一点的鱼。因为塑料金鱼摸起来就像马桶冲水把手，哗啦啦地用无聊取代恶臭，让人摸到五感退化四支僵劲不能动，没劲儿。要摸鱼，就要摸食人鱼、翻车鱼、蓝色金鱼和戴着海盗眼罩的小丑鱼。摸遍所有鳞片倒立、色彩诡异的鱼，才知道什么是真正的好鱼。</p><p>况且还有大作业和OOP考试和小学期三座大山等待着我。放眼未来，三分感伤，七分凄凉。</p><blockquote><p>胡适之啊胡适之！你怎么能如此堕落！先前订下的学习计划你都忘了吗？子曰：“吾日三省吾身。”不能再这样下去了！</p></blockquote><p>唉。总之，从今天起：</p><p>听新歌、看新书、编曲，与世界热切地交流吧！</p><p>向洋流、海鲜市场进发，去寻找好摸的鱼儿吧！</p><p>写作业、学OOP，也在所谓正途上认真地行进。</p><p>在夏天就应当做夏天的事，不是吗？</p><p><strong>绷紧神经，做有水平的咸鱼</strong>。</p>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Diary</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Diary: 以雪标记的日子</title>
    <link href="/2020/07/02/Diary-%E4%BB%A5%E9%9B%AA%E6%A0%87%E8%AE%B0%E7%9A%84%E6%97%A5%E5%AD%90/"/>
    <url>/2020/07/02/Diary-%E4%BB%A5%E9%9B%AA%E6%A0%87%E8%AE%B0%E7%9A%84%E6%97%A5%E5%AD%90/</url>
    
    <content type="html"><![CDATA[<blockquote><p>这篇日记写于去年冬天，大抵是北京初雪或第二场雪后。</p></blockquote><p>北京的雪果然是不一样的。</p><p>在这样一场声势浩大的雪面前，所有的譬喻都会失去颜色。</p><p>我在雪的第二天出发，听见自行车轮压扁雪的声响，看见树枝上泛起的白浪，看见所有的一切被这个冬天温柔地抚摸、又诗意地埋葬。风吹过的时候一些雪又从树枝上掉落下来，然后昨天的印记就一点点融化进大地里。在这时，下雪不再是存在而是某种遗忘。</p><p>我不亦乐乎地占有着新雪，我把足迹遍布那些还没有被踩实的雪窝。</p><p>窗外的树很大。透过窗子看一点点掉落下来的雪，像是在看一个重复播放的屏保动画。唯一担心的，是树上的雪不能像电脑里面那样永生永存；一点一点，一点一点，这场雪就温柔地离开了。</p><p>下雪的确是不平凡的事件。我们好像都是靠这些细碎的罕见之事在标记着每一个相似的日子；有时候我们还给它赋予仪式，在一段时间内品尝由这些庆典带来的期望和回味。</p><blockquote><p>此处应该有我去年冬天拍摄的雪景，但好像要搞图床啥的乱七八糟，之后再说。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Diary</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>反思我想不通的几点</title>
    <link href="/2020/07/01/%E5%8F%8D%E6%80%9D-%E8%AE%B0%E5%BD%95%E6%88%91%E6%83%B3%E4%B8%8D%E9%80%9A%E7%9A%84%E5%87%A0%E7%82%B9/"/>
    <url>/2020/07/01/%E5%8F%8D%E6%80%9D-%E8%AE%B0%E5%BD%95%E6%88%91%E6%83%B3%E4%B8%8D%E9%80%9A%E7%9A%84%E5%87%A0%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<p>刘遥这破事断断续续闹了大半夜，我和野合的铁粉朋友一直交流着，真切地经历了这件事的发酵、争论和潦草的收尾（当然，刘遥这个疯批还在继续他的性骚扰“行为艺术”，不知还会不会惹出其他后续）。</p><p>我对于野外合作社并没有像我的朋友那么深的执着，但我的确觉得他们是一支非常、非常、非常、非常好的乐队。王海洋的词曲和表现力，刘遥的吉他，让野合对于音乐主题的各种构想都流通起来：生命力、文学性、自由幻想，呼应着各自奔放。</p><p>如果我没有因为写不下去游戏测评郁闷到打算听会儿摇滚，而是早睡后第二天醒来看到朋友发来的此事各种后续，我也许就只会替野外合作社、替朋友感到无关痛痒的难过和惋惜（从了解刘遥之后，这样的事态发展太过于意料之中了）。但我因为睡不着，看着这件事情一步步演化，看到网友们都说要野合给个交代，看到海洋说找不到人，看到野合说找不到人，看到野合说开除，看到海洋说非要这样么，看到刘遥这个没有心的开了新号继续口头杀人放火，看到第二天早上起来各大音乐博主转载开除声明，看到海洋删博。很难过，真的，很压抑。像看到Freddie滥交、耍大牌、放弃队友，或是看到陈荒赵谬吵架、脆组在facebook发政治言论，就是很压抑。</p><p>这件事情逐步升级，前来围观顺便骂刘遥的人也越来越多，我的态度也就越来越情绪化。</p><p>所以，呼——深呼吸。仔细捋一捋，把其中尽可能多的角度从源头开始厘清。我尽量理性。</p><h3 id="关于性骚扰和炼铜"><a href="#关于性骚扰和炼铜" class="headerlink" title="关于性骚扰和炼铜"></a>关于性骚扰和炼铜</h3><hr><p>尽管刘遥从他发表言论以来就一直是个疯批，这件事的发酵则是由他近一个月来的诡异“养女”言论和其他怪话——更直接地，昨天对未成年演员叶驰敏的性骚扰——引起的。</p><p>（这么一想，刘遥有点像药水。我真的非常好奇这两个人在现实生活中是怎样的。有人说刘遥所指的“养女”是他感情很好的22岁女朋友，有人说刘遥在现实生活中幽默，有人说他沉默。我倒并不相信他会现实生活中遵纪守法，微博只是行为艺术而已。）</p><blockquote><p>关于最基本的论证基础</p><p>首先，我将采用最朴素的道德原则，即：实行权利的前提是不侵害他人的权利。我将认为合理法律的制定是源于这样的原则。但同时，我将保留一定的质疑：社会有权无条件、无偿地要求所有人为公共道德阉割自己吗？</p><p>其次，我也无意使用专业术语论证这件事的法律性质。我的话语仅代表自己粗浅的理性。</p></blockquote><p>好。</p><p><strong>第一点，关于性骚扰。</strong>性骚扰的罪过在于让被骚扰者感到不适。刘遥的言论应该已经完全到达了普遍公众的“不适”标准，因此确实是恶心的性骚扰，这点他活该。</p><p><strong>第二天，关于炼铜。</strong>刘遥的出圈言论是性骚扰+炼铜两大罪过，所以无论如何他被万人唾骂是罪有应得，乐队开除他也是最合理的选择。但我现在撇开刘遥这个个案不谈，仅谈一谈炼铜本身。</p><p>首先，炼铜之罪在于幼女由于身心的不健全，在法律上并不具有性自由（是这样吧？），因此为避免以“爱”为名的诱奸、强奸等违法行为，法律对幼女实行了以限制自由为手段的强制保护。这是非常合理的法律，但在其中有“一刀切”的成分（这存在于许多法律之中，并不意味着法律不恰当），也就意味着有一部分人群的权利受到了抑制。</p><p>假设有一个不能通过与正常年龄人群发生关系获得性快感的恋童癖，他明白他的性癖付诸行为将意味着某个孩子成为受害者，因此他克制、克制。他出于对公共道德的遵循，完全剥夺了自己的性自由。在我的眼里，这是很悲剧也很英雄的事，值得社会为他颁发一块奖章，给他提供定期的生活补助，定时去看望并给他带一束花。</p><p>但在当今时代大概“恋童癖”三个字就是赤裸裸的罪行，如果真出现了这样的人也会受到万人唾骂，与今天刘遥的结局也不会太不同罢。我于是想起来《肌肤》里那个恋童癖父亲，为了不侵犯自己的孩子便远走他乡，再也没有回过家。我觉得很难过。同样的辩护在我的心中对于天生有鲨人、施虐冲动但克制未实施的精神病也成立。</p><p>我在为极少数人心里的恶魔辩护。这有意义么？</p><p><strong>不对，等一下。</strong></p><p>我突然意识到这一情形与某个困扰过我的场景的类似性。</p><p><strong>愚蠢、残疾、丑陋，许多在当今世界会成为不容置疑的缺陷的品质，不也很大程度是天生的么？</strong></p><p>我们从出生之日起都背负着与卡西莫多类似的枷锁，对这样的原罪我们或多或少都无可奈何。我们无辜地降临于世，外貌、智商、家庭、偏好就已经为我们此后的人生之路画下一道道藩篱。只能背负而已。无论是恋童癖，或是不擅长读书，或是出生于恶劣的原生家庭，所有的参数冰冷而无罪，附着到某个个体身上才变成善恶奖惩。</p><p>我们能做的最好的选择就是彼此同情、彼此支撑，但背不住十字架的人还是得下地狱。</p><p>好吧，我释然了一点。</p><h3 id="关于艺术与人品与立场-与网民"><a href="#关于艺术与人品与立场-与网民" class="headerlink" title="关于艺术与人品与立场 与网民"></a>关于艺术与人品与立场 与网民</h3><hr><p>刘遥有病该骂，毋庸置疑。</p><p>但乐队其他成员是无辜的，作品是无辜的。这件事发后，我的第一反应居然是把野合的歌全部下载。</p><p>好悲哀。……。艺术本就不只是为真善美的颂歌，更与立场无关，不是吗。</p><p>我突然想起，在相关微博下看到一条评论，是阴阳怪气说希望刘遥能够进局后继续创造人民群众喜闻乐见的音乐。虽然原po主是在反讽，但我倒觉得，如果哪天他真做了什么需要进局的事儿，这种结局也不错。</p><p>我完全支持大家骂刘遥。我只希望作品不要下架，乐队也不要因此解散。有乐迷因为这件事选择不再听野合也没有关系，别妨碍我继续听就行了。每个人都有价值判断，别按头。</p><p>我感到很难过的一点是，这件事后，野合的评论区就变成了吵架战场。粉丝和前来骂刘遥的网民打成一团，说的话和音乐本身再也无关。</p><p>另外难过的一点是，搜狐新闻发了报道后，大家纷纷在下面评论“根本没听过这种没名气的乐队”。滚圈独树一帜的好乐队连同其作品，因为乐手的行为被贬到一文不值，成为一部分人义愤填膺的靶子，一部分人幸灾乐祸的对象。好多人是在狂欢啊。</p><p>野合的结局不该是这样。海洋该有多愁啊。</p><p>还有，顺便再评论另一件事儿罢。我实名讨厌阴阳怪气的骂人。如果你要骂人傻批或者不道德，那你就骂他傻批或者不道德，阴阳怪气骂人属实让人想吐。</p><p>所以我现在开骂：骂人时随便就咒人死甚至牵扯家人的都是傻批。刘遥傻批。</p><blockquote><p>后半段写于7.2，朋友从刘遥微博小号发的动态怀疑他想不开要自杀。如果他真的死了，无疑是将这场行为艺术风波在任何意义下推向了顶点，这也是我同意他有可能这么做的原因。</p><p>但无论如何，他很有才，他到目前为止所做的傻批事完全不至死，所以我还是希望他能好好活着。</p><p>希望海洋能和他好好谈一谈，希望他们不要闹翻，希望野合以后继续做音乐。我希望着。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Comment</category>
      
      <category>News</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Comment</tag>
      
      <tag>News</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>游戏测评：OPUS 灵魂之桥</title>
    <link href="/2020/06/30/%E6%B8%B8%E6%88%8F%E6%B5%8B%E8%AF%84%EF%BC%9AOPUS-%E7%81%B5%E9%AD%82%E4%B9%8B%E6%A1%A5/"/>
    <url>/2020/06/30/%E6%B8%B8%E6%88%8F%E6%B5%8B%E8%AF%84%EF%BC%9AOPUS-%E7%81%B5%E9%AD%82%E4%B9%8B%E6%A1%A5/</url>
    
    <content type="html"><![CDATA[<p>想了很久，写什么都怪怪的。</p><p>就这样简短地作结吧：</p><ul><li><p>画面很好，是我很喜欢的风格，中间涉及人物对话的动画有点草率；</p></li><li><p>游戏设计也很用心，整个世界历史非常完整；</p></li><li><p>玩法也比较适合我这种无水平选手；</p></li><li><p>音乐没有特别出彩，但很契合剧情；</p></li></ul><p>故事非常、非常、非常棒。最后1h的呈现，让我由衷地想：<strong>如果能做出这样的游戏，就算是997我也愿意</strong>。</p>]]></content>
    
    
    <categories>
      
      <category>Comment</category>
      
      <category>Games</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Comment</tag>
      
      <tag>Games</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
