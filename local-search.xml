<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Record: 红磡1994 摇滚中国乐势力</title>
    <link href="/2020/07/09/Record-%E7%BA%A2%E7%A3%A11994-%E6%91%87%E6%BB%9A%E4%B8%AD%E5%9B%BD%E4%B9%90%E5%8A%BF%E5%8A%9B/"/>
    <url>/2020/07/09/Record-%E7%BA%A2%E7%A3%A11994-%E6%91%87%E6%BB%9A%E4%B8%AD%E5%9B%BD%E4%B9%90%E5%8A%BF%E5%8A%9B/</url>
    
    <content type="html"><![CDATA[<p>在朋友和滚圈知名人士的推荐下看了《摇滚中国乐势力》，一场于1994年在香港红磡体育馆举办的中国摇滚乐里程碑式的演出。</p><p>太绝了，太绝了。现在是7.9晚上，我看完了唐朝出场之前的部分，但我脑子里的感想已经满到要泼出来。趁着心脏还未完全停止悸动，赶紧把我看到的想到的都写下来。</p><blockquote><p>发现自己看的好像是89分钟的不完整版，哪天把没听到的部分补上。</p><p>之后补一下这三个人的背景经历。</p></blockquote><h2 id="窦唯"><a href="#窦唯" class="headerlink" title="窦唯"></a>窦唯</h2><p><strong>演出歌曲</strong>： （1）高级动物    （2）哦乖    （3）悲伤的梦    （4）明天更漫长（<em>未看到</em>） （5）黑色梦中</p><p><strong>演出成员</strong>： </p><p>主唱：窦唯        吉他手：周凤岭        贝斯手：胡晓海        键盘手：白方林        鼓手：王澜        打击乐手：刘效松</p><p>窦唯年轻时候也太！帅！了！<strong>我宣布我从今天起成为窦仙儿的颜粉</strong>。</p><p><img src="C:%5CUsers%5Cybr19%5CDocuments%5C100%_MOREHAB%5CFiles%5CBLOGGER%5Csource%5Cimg%5Cblog%5C%E7%AA%A6%E5%94%AF" srcset="/img/loading.gif" alt="1994年的窦唯"></p><p><img src="C:%5CUsers%5Cybr19%5CDocuments%5C100%_MOREHAB%5CFiles%5CBLOGGER%5Csource%5Cimg%5Cblog%5C%E7%AA%A6%E5%94%AF%E5%9C%A8%E4%BD%95%E5%8B%87%E7%9A%84%E9%92%9F%E9%BC%93%E6%A5%BC%E9%87%8C%E5%90%B9%E7%AC%9B%E5%AD%90.gif" srcset="/img/loading.gif" alt="窦唯在钟鼓楼里吹笛子"></p><p>窦唯的这几首里我只听过哦乖（忘词片段实在是太经典太可爱了）。窦唯的唱功很不错，舞台表现有点放不开<del>（可能是因为穿着帅气的小西装）</del>。他的风格似乎介于张楚和何勇之间，音乐编排上相对来说是现代的（但旋律里有中国上世纪流行等的影子，还有他标志性的雷鬼色彩），词的内容也更加理想化和抽象（并不是形式上的抽象，而是内容上的抽象）。相对于何勇，他更沉郁、内敛、深思，是很具有中国传统文人特点的一位摇滚人。</p><h2 id="张楚"><a href="#张楚" class="headerlink" title="张楚"></a>张楚</h2><p><strong>演出曲目</strong>：（1）上苍保佑吃饱了饭的人民  （2）和大伙去乘凉（<em>未听到</em>） （3）孤独的人是可耻的  </p><p>​                   （4）赵小姐（<em>未听到</em>）  （5）厕所和床    （6）蚂蚁</p><p><strong>乐队成员</strong>：</p><p>主唱：张楚        吉他手：曹均        低音吉他手：罗岩        键盘手：窦鹏        鼓手：刘效松        小提琴手：黄立杰</p><p>个人感觉张楚的风格并非纯粹的摇滚，器乐上有很明显的上世纪的民谣/流行味儿，撤掉鼓组可能摇滚味儿就不浓了。他的歌当中器乐没有特别出彩的地方（总体和谐），重心其实是在人声（但张楚的唱功和演绎实在是一般，有一点可惜）。张楚的词写得可谓一绝，带着土地、农民和工人、流浪汉的气息，是贫穷的，是真实而平凡的，语言和内蕴都非常有感染力。</p><h2 id="何勇"><a href="#何勇" class="headerlink" title="何勇"></a>何勇</h2><p><strong>演出曲目</strong>：（1）姑娘漂亮    （2）头上的包（<em>未听</em>）（3）垃圾场    （4）冬眠（<em>未听</em>） （5）钟鼓楼    （6）非洲</p><p><strong>乐队成员</strong>：</p><p>主唱/吉他手：何勇    三弦琴手：何玉生（何勇父亲）     吉他手：邓讴歌    贝斯手：欧洋    鼓手：余伟民</p><p>键盘手：梁和平    打击乐手：刘效松</p><p>看到目前为止，何勇的表演可谓是本场演出的高潮。但在此之前，我从未听过他的作品，抑或是名字。</p><p>何勇歌曲中的器乐、编曲已经非常现代（或者说，有明显的西方摇滚的感觉）了。他会在同一个作品中对一段旋律通过不同的乐器组合、不同的效果、音符的改动进行演绎，歌曲因此流畅且富于变化和层次。他的风格也不止是摇滚，在垃圾场里有爵士感觉的和弦，在钟鼓楼里有三弦等民族乐器的加入，非洲更是妥妥的热带风。好有才！他的歌词也大多采用朗诵方式<del>（或许他就是reader型摇滚人的始祖？）</del>。</p><p>何勇和讴歌的表演真的很 绝。各种奇奇怪怪的演奏姿势，往头上泼水，跳起来然后以帅气的姿势落地——这不就是万千摇滚少女梦中的场景吗（bushi）！何勇讲话也比窦唯和张楚清楚多了，肯定是贼好一主持人。太燥了。</p>]]></content>
    
    
    <categories>
      
      <category>Music</category>
      
      <category>Live</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Music</tag>
      
      <tag>Comment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Comment: Notes on the ALBUMs</title>
    <link href="/2020/07/09/Comment-Notes-on-the-ALBUMs/"/>
    <url>/2020/07/09/Comment-Notes-on-the-ALBUMs/</url>
    
    <content type="html"><![CDATA[<p>这篇blog用于记录我对于最近听的各种专辑的小感想，可能是记录乐队背景信息，可能是评论下artist的身材，也可能只是一句话的好恶。随便写点，主要目的仅在于形式上留点记录。</p><h2 id="Morphine"><a href="#Morphine" class="headerlink" title="Morphine"></a>Morphine</h2><p>乐队背景：</p><blockquote><p>1989年，Morphine乐队成立于美国马萨诸塞州剑桥市，发起人是<strong>歌手兼贝司手</strong>（所谓的贝司只有两根弦，有时是一根贝司弦加两根吉他弦）Mark Sandman 和中低音萨克斯手Dana Colley，后来又找来了鼓手Jerome Deupree，鼓手后更换为Billy Conway。<strong>乐队没有吉他手。</strong></p></blockquote><p>乐队把自己的风格称为“<strong>Low Rock</strong>”（简约、音阶低沉），与传统的“<strong>Power Trio</strong>”不同。</p><blockquote><p>Power Trio(in British English):</p><p>摇滚乐中的一种形式，强调贝斯、鼓、吉他的器乐演奏，没有节奏吉他、键盘，同时削减人声的重要性。</p><p>主音吉他（lead guitar）：主要负责solo（单音旋律），音质明亮、持久，常使用高输出的拾音器以及各类效果器、压缩器。</p><p>节奏吉他（rhythm guitar）: 负责节奏和和声，多弹奏中低音，通常采用配置双线圈拾音器的吉他，音色饱满，弦较粗较硬。</p></blockquote><h3 id="Like-Swimming-1997"><a href="#Like-Swimming-1997" class="headerlink" title="Like Swimming(1997)"></a>Like Swimming(1997)</h3><p>没有吉他的乐队，贝斯和萨克斯原地起飞。vocal是次要的、类似于合成器音色一样的存在，但Sandman的演绎非常带感。</p><p>嬉皮，电子，迷幻，爵士。Like Swimming是他们比较平和的一张专，质感像果味电子烟或者LSD。并不是很摇滚的一张概念专辑。</p><h2 id="刘柏辛Lexie"><a href="#刘柏辛Lexie" class="headerlink" title="刘柏辛Lexie"></a>刘柏辛Lexie</h2><h3 id="无限意识Meta-Ego-2019"><a href="#无限意识Meta-Ego-2019" class="headerlink" title="无限意识Meta Ego(2019)"></a>无限意识Meta Ego(2019)</h3><p>不知道说啥。制作听着很舒服，词一般，曲一般。就是都差点意思。</p><p>整张专的理念大概是围绕“存在”、“世界”、“神秘”，制作方式几乎都相同，迷幻的beat，中英文交叉的flow里旋律很多，再加上几层带电的人声当和声飘在后面。</p><h2 id="JABBERLOOP"><a href="#JABBERLOOP" class="headerlink" title="JABBERLOOP"></a>JABBERLOOP</h2><p>乐队背景：</p><blockquote><p>日本京都的club jazz乐队，5人组成（萨克斯，小号，键盘，bass/guitar，鼓）。</p><p>专辑《Ooparts》获得了日本爵士乐排行榜第一。</p><p>来台湾演出且和蛋堡合作过，参与了《最终幻想》的主题曲录制。</p></blockquote><h3 id="台湾特选辑"><a href="#台湾特选辑" class="headerlink" title="台湾特选辑"></a>台湾特选辑</h3><p>每一首都很棒！日式爵士味很浓。<br>但平行来看相似度太高，全专听完有点亏。</p><h3 id="OOPARTS"><a href="#OOPARTS" class="headerlink" title="OOPARTS"></a>OOPARTS</h3><p>很棒！这张专就不是很重复，有些歌像传统爵士演奏是由不同声部的solo连接而成，有些使用了很明亮的打击乐器/电子合成器，有些就偏日漫风，<del>开门第一首贼像新宝岛</del>，甚至最后还有一首DJ搓碟曲（虽然我不是很喜欢）。</p><p>感觉日系爵士里Blues/Soul的元素要少一些……</p><h2 id="Doja-Cat"><a href="#Doja-Cat" class="headerlink" title="Doja Cat"></a>Doja Cat</h2><p>之前高三疯狂听emo的时候曾经被推过No Police和So High，但不是特别感兴趣。这次再听是因为Say So被我在b站上关注的up主拍了相关视频。</p><h3 id="Hot-Pink-2019"><a href="#Hot-Pink-2019" class="headerlink" title="Hot Pink(2019)"></a>Hot Pink(2019)</h3><p>Hot Pink是我这几天听得最多的专辑，大概是因为Doja实在太辣了。这张专几乎全部是sex talk，但Doja能写出12首sex talk且不重复，也挺厉害的。</p><p>这张专的beat都挺好听的，且Doja的flow写得真的很棒，节奏变化、韵脚都非常流畅且有意思。最吸引我的是Doja的声线，既可以唱娃娃音的vocal，也可以把音色拉到粗哑唱rap，对于不同词语的音色处理很绝。</p><p>再补一段小感想：作为在中文文化里接受价值熏陶（且接受良好教育）的韭菜，我确实会不自觉地将中文中的色情、粗口等成分与低俗作一定的关联，我对于中文的纯dirty talk歌曲的接受度明显不如我对英文的同主题歌曲的接受度高。这可能是因为英语文化中相关元素的耻度本来就较低，也可能是因为我没有在英语的语言环境下对不同概念（及其对应的英语词汇）形成价值判断。这间接说明我们对于事物的判断完全可能因为使用的语言发生变化（因此换个语言环境换个人格是完全合理的事情）。</p><h2 id="The-Reddings"><a href="#The-Reddings" class="headerlink" title="The Reddings"></a>The Reddings</h2><p>美国80年代至今的funk乐队。我还挺想了解下乐队背景的，但网上没有……得把科学上网提上进程。</p><h3 id="The-Awakening（1980）"><a href="#The-Awakening（1980）" class="headerlink" title="The Awakening（1980）"></a>The Awakening（1980）</h3><p>我觉得是非常棒的一张funk专辑！非常标准的funk曲中间穿插了几首舒缓的真诚小情歌。可能因为专辑歌曲数不是很多，我觉得全专总体重复度不高，每首编曲各有特色、突出了不同的声部。</p>]]></content>
    
    
    <categories>
      
      <category>Music</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Music</tag>
      
      <tag>Comment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LiquidFun文档简记</title>
    <link href="/2020/07/08/LiquidFun%E6%96%87%E6%A1%A3%E7%AE%80%E8%AE%B0/"/>
    <url>/2020/07/08/LiquidFun%E6%96%87%E6%A1%A3%E7%AE%80%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="0-Pre-Everything"><a href="#0-Pre-Everything" class="headerlink" title="0. Pre-Everything"></a>0. Pre-Everything</h2><h3 id="0-0-Reference"><a href="#0-0-Reference" class="headerlink" title="0.0 Reference"></a>0.0 Reference</h3><p><a href="http://www.ladeng6666.com/blog/?cat=8" target="_blank" rel="noopener">Blog：拉小登，上面有Box2D部分概念和应用</a></p><h2 id="1-Collision模块。"><a href="#1-Collision模块。" class="headerlink" title="1. Collision模块。"></a>1. Collision模块。</h2><h3 id="1-0-Shape"><a href="#1-0-Shape" class="headerlink" title="1.0 Shape"></a>1.0 Shape</h3><p>用于碰撞检测，在b2Fixture创建时会由b2World自动创建。</p><ul><li>第一种：通过fixture与body绑定，随body进行rigid moves。</li><li>第二种：通过顶点坐标的形式存在于world中，只能通过手动设置坐标进行移动。</li></ul><p>（1）分类：</p><pre><code class="hljs C++"><span class="hljs-keyword">enum</span> Type &#123;   e_circle = <span class="hljs-number">0</span>, e_edge = <span class="hljs-number">1</span>,   e_polygon = <span class="hljs-number">2</span>, e_chain = <span class="hljs-number">3</span>,   e_typeCount = <span class="hljs-number">4</span> &#125;</code></pre><p>（2）子类：b2ChainShape, b2CircleShape, …Edge…, …Polygon…。</p><p>（3）数据成员：m_type, m_radius。</p><p>（4）public成员函数：</p><p><img src="C:%5CUsers%5Cybr19%5CDocuments%5C100%_MOREHAB%5CFiles%5CBLOGGER%5Csource%5Cimg%5Cblog%5Cmember_f.png" srcset="/img/loading.gif" alt="image-20200709114719125"></p><h3 id="1-1-Circle"><a href="#1-1-Circle" class="headerlink" title="1.1 Circle"></a>1.1 Circle</h3><pre><code class="hljs c++">b2CircleShape <span class="hljs-built_in">circle</span>;  <span class="hljs-comment">//实心</span><span class="hljs-built_in">circle</span>.m_p.Set(<span class="hljs-number">2.0f</span>, <span class="hljs-number">3.0f</span>); <span class="hljs-comment">//圆心位置</span><span class="hljs-built_in">circle</span>.m_radius = <span class="hljs-number">0.5f</span>; <span class="hljs-comment">//半径必须大于零</span></code></pre><h3 id="1-2-Polygon"><a href="#1-2-Polygon" class="headerlink" title="1.2 Polygon"></a>1.2 Polygon</h3><p>Def: 实心凸（连接内部两点的线段不与边交叉）多边形，&gt;=3边。</p><p>通过CCW（逆时针winding）填充：</p><blockquote><p>多边形填充有两种模式：alternate和winding。</p><p><strong>alternate</strong>: </p><p>显示器的每个扫描行都是从左到右扫描，系统只填充每个扫描行遇到的多边形的奇数边和偶数边之间的部分，不填充偶数边到奇数边之间的部分。</p><p><strong>winding</strong>: </p><p>用一笔画一个多边形，分clockwise或counterclockwise。</p><p>画一条直线M，对于与它相交的线段：从直线M的左边到右边为clockwise，count+1；从直线M的右边到左边为counterclockwise，count-1。<br>判断一个区域E是否要被填充：从该区域画一线段M到整个多边型区域外，按照上面的方法对<strong>与该线相交的多边形的边</strong>进行count的计数，如果count非零则区域E要被填充，否则不填充。  </p></blockquote><p>从shape继承了radius，用于在多边形周围创造skin，防止tunneling。</p><p>这会导致形状之间有小gap，可以将visual表示做得大一点。</p><p><strong>成员都是public的</strong>， 初始化可传入一个vertex数组：</p><pre><code class="hljs C++"><span class="hljs-comment">///至多b2_maxPolygonVertices个顶点</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">b2PolygonShape</span> :</span> <span class="hljs-keyword">public</span> b2Shape&#123;<span class="hljs-keyword">public</span>:b2PolygonShape();    <span class="hljs-comment">/// Implement b2Shape.</span><span class="hljs-function">b2Shape* <span class="hljs-title">Clone</span><span class="hljs-params">(b2BlockAllocator* allocator)</span> <span class="hljs-keyword">const</span></span>;<span class="hljs-comment">/// @see b2Shape::GetChildCount</span><span class="hljs-function">int32 <span class="hljs-title">GetChildCount</span><span class="hljs-params">()</span> <span class="hljs-keyword">const</span></span>;<span class="hljs-comment">/// 用顶点数组创造多边形。</span><span class="hljs-comment">/// 边数count属于[3, b2_maxPolygonVertices].</span><span class="hljs-comment">/// 即时传入的点能构成多边形，点也可能被重排。</span><span class="hljs-comment">/// 共线的点被处理但不被移除。</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Set</span><span class="hljs-params">(<span class="hljs-keyword">const</span> b2Vec2* points, int32 count)</span></span>;<span class="hljs-comment">/// 以原点为中心，平行于坐标轴。</span><span class="hljs-comment">/// hx the half-width，hy the half-height.</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetAsBox</span><span class="hljs-params">(float32 hx, float32 hy)</span></span>;<span class="hljs-comment">/// hx the half-width，hy the half-height.</span><span class="hljs-comment">/// center：中心坐标</span><span class="hljs-comment">/// angle：旋转角度</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetAsBox</span><span class="hljs-params">(float32 hx, float32 hy, <span class="hljs-keyword">const</span> b2Vec2&amp; center, float32 angle)</span></span>;<span class="hljs-comment">/// @see b2Shape::TestPoint</span><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">TestPoint</span><span class="hljs-params">(<span class="hljs-keyword">const</span> b2Transform&amp; transform, <span class="hljs-keyword">const</span> b2Vec2&amp; p)</span> <span class="hljs-keyword">const</span></span>;<span class="hljs-comment">// @see b2Shape::ComputeDistance</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ComputeDistance</span><span class="hljs-params">(<span class="hljs-keyword">const</span> b2Transform&amp; xf, <span class="hljs-keyword">const</span> b2Vec2&amp; p, float32* distance, b2Vec2* normal, int32 childIndex)</span> <span class="hljs-keyword">const</span></span>;<span class="hljs-comment">/// Implement b2Shape.</span><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">RayCast</span><span class="hljs-params">(b2RayCastOutput* output, <span class="hljs-keyword">const</span> b2RayCastInput&amp; input,</span></span><span class="hljs-function"><span class="hljs-params"><span class="hljs-keyword">const</span> b2Transform&amp; transform, int32 childIndex)</span> <span class="hljs-keyword">const</span></span>;<span class="hljs-comment">/// @see b2Shape::ComputeAABB</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ComputeAABB</span><span class="hljs-params">(b2AABB* aabb, <span class="hljs-keyword">const</span> b2Transform&amp; transform, int32 childIndex)</span> <span class="hljs-keyword">const</span></span>;<span class="hljs-comment">/// @see b2Shape::ComputeMass</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ComputeMass</span><span class="hljs-params">(b2MassData* massData, float32 density)</span> <span class="hljs-keyword">const</span></span>;<span class="hljs-comment">/// Get the vertex count.</span><span class="hljs-function">int32 <span class="hljs-title">GetVertexCount</span><span class="hljs-params">()</span> <span class="hljs-keyword">const</span> </span>&#123; <span class="hljs-keyword">return</span> m_count; &#125;<span class="hljs-comment">/// Get a vertex by index.</span><span class="hljs-function"><span class="hljs-keyword">const</span> b2Vec2&amp; <span class="hljs-title">GetVertex</span><span class="hljs-params">(int32 index)</span> <span class="hljs-keyword">const</span></span>;<span class="hljs-comment">/// 验证凸性，耗时很长。</span><span class="hljs-comment">/// @returns true if valid</span><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">Validate</span><span class="hljs-params">()</span> <span class="hljs-keyword">const</span></span>;b2Vec2 m_centroid; <span class="hljs-comment">//初始为0</span>b2Vec2 m_vertices[b2_maxPolygonVertices]; b2Vec2 m_normals[b2_maxPolygonVertices];int32 m_count; <span class="hljs-comment">//b2_polygonRadius</span>    <span class="hljs-comment">//m_type = e_polygon;</span><span class="hljs-comment">//m_radius = b2_polygonRadius;</span>&#125;;</code></pre><h3 id="1-3-Edge"><a href="#1-3-Edge" class="headerlink" title="1.3 Edge"></a>1.3 Edge</h3><p>线段，用于做静态的环境。能与circle,polygon碰撞，但不能与线段碰撞。</p><p>（这是由于碰撞系统要求两个物体至少一个有体积，线段无体积。）</p><pre><code class="hljs armasm"><span class="hljs-keyword">b2Vec2 </span><span class="hljs-built_in">v1</span>(<span class="hljs-number">0</span>.<span class="hljs-number">0</span>f, <span class="hljs-number">0</span>.<span class="hljs-number">0</span>f), <span class="hljs-built_in">v2</span>(<span class="hljs-number">1</span>.<span class="hljs-number">0</span>f, <span class="hljs-number">0</span>.<span class="hljs-number">0</span>f)<span class="hljs-comment">;</span><span class="hljs-keyword">b2EdgeShape </span>edge<span class="hljs-comment">;</span><span class="hljs-symbol">edge.Set</span>(<span class="hljs-built_in">v1</span>, <span class="hljs-built_in">v2</span>)<span class="hljs-comment">;  //初始化</span></code></pre><p>通常游戏世界会涉及多条线段连接而成的线。当物体在其上滑动时，可能会与线段顶点发声ghost collision，造成internal collision normal。</p><p>于是有如下机制：使用命令</p><pre><code class="hljs C++">b2Vec2 v0<span class="hljs-number">-3</span>(x0<span class="hljs-number">-3</span>,y0<span class="hljs-number">-3</span>);b2EdgeShape edge;edge.Set(v1, v2);   edge.m_hasVertex0 = <span class="hljs-literal">true</span>;   edge.m_hasVertex3 = <span class="hljs-literal">true</span>;   edge.m_vertex0 = v0;   edge.m_vertex3 = v3;</code></pre><p>存入临近的ghost vertice，但这有点麻烦。</p><p>![image-20200708114649294](C:\Users\ybr19\Documents\100%_MOREHAB\Files\BLOGGER\source\img\blog\ghost collision.png)</p><p>于是又有如下机制：将边缝合为chain shapes。这可以防止ghost collision，并提供<strong>双边碰撞（two-sided collision, 我猜测指的是在两端的碰撞）。</strong></p><p><img src="C:%5CUsers%5Cybr19%5CDocuments%5C100%_MOREHAB%5CFiles%5CBLOGGER%5Csource%5Cimg%5Cblog%5C2-sided.png" srcset="/img/loading.gif" alt="Chain shape"></p><pre><code class="hljs C++"><span class="hljs-comment">// This a chain shape with isolated vertices</span>  b2Vec2 vs[<span class="hljs-number">4</span>]; <span class="hljs-comment">//Set them</span>  b2ChainShape chain;  chain.CreateChain(vs, <span class="hljs-number">4</span>);</code></pre><p>对于滚动的游戏世界，可以使用ghost vertices将chain连接在一起。</p><pre><code class="hljs C++"><span class="hljs-comment">//Install ghost vertices</span>chain.SetPrevVertex(b2Vec2(<span class="hljs-number">3.0f</span>, <span class="hljs-number">1.0f</span>));chain.SetNextVertex(b2Vec2(<span class="hljs-number">-2.0f</span>, <span class="hljs-number">0.0f</span>));</code></pre><p>还可以创造<strong>loop</strong>：</p><pre><code class="hljs C++"><span class="hljs-comment">// first and last vertices are connected</span>b2ChainShape chain;chain.CreateLoop(vs, <span class="hljs-number">4</span>);</code></pre><p>代码<strong>不支持chain shape之间出现交叉</strong>，且vertices之间过近也可能导致问题，故最好保证边长于b2_linearSlop = 5mm。</p><blockquote><p>/// A small length used as a collision and constraint tolerance. Usually it is<br>/// chosen to be numerically significant, but visually insignificant.<br>#define b2_linearSlop            0.005f</p></blockquote><p>在chain中的边都被视作child shape，可以通过指标访问。当chain shape与body连接时，每个边在broad-phase碰撞树中都会得到自己的bounding box。</p><pre><code class="hljs reasonml"><span class="hljs-comment">// Visit each child edge.</span>for (<span class="hljs-built_in">int32</span> i = <span class="hljs-number">0</span>; i &lt; chain.<span class="hljs-constructor">GetChildCount()</span>; ++i)&#123;   b2EdgeShape edge;   chain.<span class="hljs-constructor">GetChildEdge(&amp;<span class="hljs-params">edge</span>, <span class="hljs-params">i</span>)</span>;   …&#125;</code></pre><h3 id="1-5-Transform"><a href="#1-5-Transform" class="headerlink" title="1.5 Transform"></a>1.5 Transform</h3><p>transform类用于表示刚体的位置，在Math.h中定义。</p><p>数据成员：</p><pre><code class="hljs 1c">b2Vec2 p; <span class="hljs-comment">//translation</span>b2Rot q; <span class="hljs-comment">//rotation</span><span class="hljs-comment">//Rot类含两个数据成员：旋转角的s和c。</span></code></pre><h3 id="1-4-几何查询"><a href="#1-4-几何查询" class="headerlink" title="1.4  几何查询"></a>1.4  几何查询</h3><h4 id="1-4-1-查询点与形状的重合"><a href="#1-4-1-查询点与形状的重合" class="headerlink" title="1.4.1  查询点与形状的重合"></a>1.4.1  查询点与形状的重合</h4><pre><code class="hljs reasonml"><span class="hljs-built_in">bool</span> hit = shape-&gt;<span class="hljs-constructor">TestPoint(<span class="hljs-params">transform</span>, <span class="hljs-params">point</span>)</span>;</code></pre><p>edge和chain（包括loop）总会返回false。</p><h4 id="1-4-2-进行ray-cast"><a href="#1-4-2-进行ray-cast" class="headerlink" title="1.4.2  进行ray cast"></a>1.4.2  进行ray cast</h4><blockquote><p>ray cast（光线投射）：</p><p>用于3D数据场的可视化，是体绘制中的一种处理方式：</p><p>向三维数据场投射出光线，然后沿着光线方向积分，数值化方法为由前往后或由后向前合成。</p><p>（不是很懂）</p></blockquote><p>在这里指用一束光线打到shape上，得到第一个交点和对应的向量。若光线从形状内部触发，则标记为未击中。</p><p><img src="C:%5CUsers%5Cybr19%5CDocuments%5C100%_MOREHAB%5CFiles%5CBLOGGER%5Csource%5Cimg%5Cblog%5Cray_cast.png" srcset="/img/loading.gif" alt="image-20200709140659310"></p><h4 id="1-4-3-两个图形的重合"><a href="#1-4-3-两个图形的重合" class="headerlink" title="1.4.3 两个图形的重合"></a>1.4.3 两个图形的重合</h4><pre><code class="hljs reasonml"><span class="hljs-built_in">bool</span> b2<span class="hljs-constructor">TestOverlap(<span class="hljs-params">const</span> <span class="hljs-params">b2Shape</span> <span class="hljs-operator">*</span><span class="hljs-params">sA</span>, <span class="hljs-params">int32</span> <span class="hljs-params">indexA</span>, <span class="hljs-params">const</span> <span class="hljs-params">b2Shape</span> <span class="hljs-operator">*</span><span class="hljs-params">sB</span>, <span class="hljs-params">int32</span> <span class="hljs-params">indexB</span>, <span class="hljs-params">const</span> <span class="hljs-params">b2Transform</span> &amp;<span class="hljs-params">xfa</span>, <span class="hljs-params">const</span> <span class="hljs-params">b2Transform</span> &amp;<span class="hljs-params">xfb</span>)</span>;<span class="hljs-comment">//index指对于chain shapes的child index。</span></code></pre><h4 id="1-4-4-Contact-Manifold-接触流形"><a href="#1-4-4-Contact-Manifold-接触流形" class="headerlink" title="1.4.4 Contact Manifold(接触流形)"></a>1.4.4 Contact Manifold(接触流形)</h4><p>LiquidFun有用于计算重合shape的接触点的函数。</p><blockquote><p>normal vector: 法向量。</p></blockquote><p>圆对圆/圆对多边形：一个点+一个法向量。</p><p>多边形对多边形：两个点+一个法向量，被统一在一个流形结构里。</p><blockquote><p>b2Manifold类包含1*法向量 + &lt;=2个接触点，均以local坐标系保存。每个点都存下了法向和切向（摩擦）的力。</p><p>b2Manifold是用于内部使用的类。用户最好使用b2WorldManifold来生成normal和points在world中的坐标，需要提供b2Manifold, shape transform 和 radius。</p><pre><code class="hljs c++">b2WorldManifold worldManifold;worldManifold.Initialize(&amp;manifold, transformA, shapeA.m_radius, transformB, shapeB.m_radius);<span class="hljs-keyword">for</span> (int32 i = <span class="hljs-number">0</span>; i &lt; manifold.pointCount; ++i)&#123;   b2Vec2 <span class="hljs-built_in">point</span> = worldManifold.points[i];   …&#125;</code></pre></blockquote><p>在模拟中manifold会发生变化，点可能增加或减少，可以通过b2GetPointStates检测。</p><p><img src="C:%5CUsers%5Cybr19%5CDocuments%5C100%_MOREHAB%5CFiles%5CBLOGGER%5Csource%5Cimg%5Cblog%5Cpointstate.png" srcset="/img/loading.gif" alt="image-20200709153724244"></p><p><img src="C:%5CUsers%5Cybr19%5CDocuments%5C100%_MOREHAB%5CFiles%5CBLOGGER%5Csource%5Cimg%5Cblog%5Cgetstate.png" srcset="/img/loading.gif" alt="image-20200709153811976"></p><h4 id="1-4-5-距离"><a href="#1-4-5-距离" class="headerlink" title="1.4.5 距离"></a>1.4.5 距离</h4><p>b2Distance函数用于计算两个形状之间的距离，该函数需要将shape转化为shape proxy，还会进行一定的缓存以准备重复调用。</p><pre><code class="hljs C++"><span class="hljs-comment">/// Compute the closest points between two shapes. Supports any combination of:</span><span class="hljs-comment">/// b2CircleShape, b2PolygonShape, b2EdgeShape. The simplex cache is input/output.</span><span class="hljs-comment">/// On the first call set b2SimplexCache.count to zero.</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">b2Distance</span><span class="hljs-params">(b2DistanceOutput* output,</span></span><span class="hljs-function"><span class="hljs-params">b2SimplexCache* cache, </span></span><span class="hljs-function"><span class="hljs-params"><span class="hljs-keyword">const</span> b2DistanceInput* input)</span></span>;</code></pre><p>其中，input的具体信息如下：</p><pre><code class="hljs C++"><span class="hljs-comment">/// Input for b2Distance.</span><span class="hljs-comment">/// You have to option to use the shape radii</span><span class="hljs-comment">/// in the computation. </span><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">b2DistanceInput</span></span><span class="hljs-class">&#123;</span>b2DistanceProxy proxyA;b2DistanceProxy proxyB;b2Transform transformA;b2Transform transformB;<span class="hljs-keyword">bool</span> useRadii;&#125;;</code></pre><p>output的具体信息如下：</p><pre><code class="hljs C++"><span class="hljs-comment">/// Output for b2Distance.</span><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">b2DistanceOutput</span></span><span class="hljs-class">&#123;</span>b2Vec2 pointA;<span class="hljs-comment">///&lt; closest point on shapeA</span>b2Vec2 pointB;<span class="hljs-comment">///&lt; closest point on shapeB</span>float32 distance;int32 iterations;<span class="hljs-comment">///&lt; number of GJK iterations used</span>&#125;;</code></pre><p>SimplexCache的信息如下（不是很明白具体要传啥）：</p><pre><code class="hljs C++"><span class="hljs-comment">/// Used to warm start b2Distance.</span><span class="hljs-comment">/// Set count to zero on first call.</span><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">b2SimplexCache</span></span><span class="hljs-class">&#123;</span>float32 metric;<span class="hljs-comment">///&lt; length or area</span>uint16 count;uint8 indexA[<span class="hljs-number">3</span>];<span class="hljs-comment">///&lt; vertices on shape A</span>uint8 indexB[<span class="hljs-number">3</span>];<span class="hljs-comment">///&lt; vertices on shape B</span>&#125;;</code></pre><h4 id="1-4-6-Time-of-Impact"><a href="#1-4-6-Time-of-Impact" class="headerlink" title="1.4.6 Time of Impact"></a>1.4.6 Time of Impact</h4><p>用于决定两个moving shapes的碰撞时间，防止tunneling。</p><p>该函数会考虑旋转和平移，但如果旋转角度过大，则函数可能遗漏碰撞。但函数仍然会报告不重合的时间，且会考虑所有的平移碰撞。</p><p><strong>后面还有一大段讨论这个函数的限制等，没太明白，暂且跳过。</strong></p><h3 id="1-5-动态树"><a href="#1-5-动态树" class="headerlink" title="1.5 动态树"></a>1.5 动态树</h3><p>用于有效地管理大量shapes（但实际上它并不掌握shape的信息，而是在AABB上操作）。</p><p>该树就是AABB的层级树，每个内部节点有两个子节点，叶子是单用户的AABB。该树会使用旋转保持平衡，即便输入是退化的。</p><p>树的结构使得它能有效地执行ray cast和region query。一般我们不会直接使用该树。</p><p>同样，使用动态树进行pair management，可以对碰撞进行broad-phase检测。broad-phase一般也不会直接使用。</p><h2 id="2-Dynamics模块"><a href="#2-Dynamics模块" class="headerlink" title="2. Dynamics模块"></a>2. Dynamics模块</h2><p>包含fixture, rigid body, contact, joint, world, listener等多个类，之间依赖复杂。</p><h3 id="2-1-Bodies"><a href="#2-1-Bodies" class="headerlink" title="2.1 Bodies"></a>2.1 Bodies</h3><ul><li><p>Bodies有位置和速度；</p></li><li><p>可以在其上施加力-foce、力矩-torque、冲量-impulse；</p></li><li><p>可以是static, kinematic, dynamic。</p></li></ul><blockquote><p>Dynamic: 具有全套属性（有限质量、阻力），受重力和作用力的影响，可以和其他每个刚体碰撞，性能成本高、最具互动性。</p><p>Kinematic: 仅在明确的用户控制下移动（手动移动/速度），只能与Dynamic碰撞，不受重力和作用力的影响，成本低。碰撞下同样不动（无限质量：mass = inverse mass = 0）。</p><p>Static: 不动（具有无限质量）（除非用户手动移动），只能与Dynamic碰撞。</p></blockquote><ul><li><strong>Bodies carry fixtures.</strong> 在LiquidFun中一定是刚体（一个Body上的两个fixture不会发生相对运动，不会碰撞）。</li><li>body从fixture处获得质量属性（可以override）。</li><li>一般会对创建的body保存其指针，以便于查询和析构。</li></ul><h4 id="2-1-1-定义"><a href="#2-1-1-定义" class="headerlink" title="2.1.1 定义"></a>2.1.1 定义</h4><p>通过 b2BodyDef（可循环使用） 定义一个body。</p><p>body有两个点比较重要：</p><ul><li>原点：fixture和joint都是以原点为参照附着的。</li><li>质心：很多内部计算都要使用质心。</li></ul><blockquote><p>frame of reference: 信仰和准则，参照系。</p></blockquote><p>Shapes are added to a body after construction.</p><pre><code class="hljs C++">    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">b2BodyDef</span></span><span class="hljs-class">&#123;</span><span class="hljs-comment">///enum b2BodyType &#123;</span><span class="hljs-comment">///b2_staticBody = 0, b2_kinematicBody, b2_dynamicBody, b2_bulletBody,&#125;;</span>    <span class="hljs-comment">/// 最好在创造时就确定，因为之后改变type花费巨大</span><span class="hljs-comment">/// Note: if a dynamic body would have zero mass, the mass is set to one.</span>b2BodyType type;<span class="hljs-comment">/// The world position of body's 原点. </span>    <span class="hljs-comment">///不要把body放在world的原点然后再移动！这会导致时间成本提高</span>b2Vec2 <span class="hljs-built_in">position</span>;<span class="hljs-comment">/// The world angle of the body in radians.</span>float32 angle;<span class="hljs-comment">/// The 线速度 of the body's origin in world co-ordinates.</span>b2Vec2 linearVelocity;<span class="hljs-comment">/// The 角速度 of the body.</span>float32 angularVelocity;</code></pre><p><strong>Damping – 阻尼</strong></p><ul><li>Damping与friction不同，friction仅在有接触时出现</li><li>damping系数应当&gt;0=no damping &amp;&amp; &lt;infinity=full damping</li><li>通常damping系数 0-0.1</li><li>linear damping会让body看着像飘起来<pre><code class="hljs C++"><span class="hljs-comment">///线性damping是用于降低线速度，阻尼系数可以&gt;1,但系数较大时效果对time step较为敏感</span>float32 linearDamping;<span class="hljs-comment">/// 角度damping是用于降低角速度，阻尼系数可以&gt;1,但系数较大时效果对time step较为敏感</span>float32 angularDamping;</code></pre></li></ul><p><strong>Sleep</strong>: </p><p>将body送入sleep状态意味着停止模拟它，降低成本。</p><p>当：</p><ul><li>一个醒来的body和睡着的body碰撞时</li><li>body上附着的joint/contact被消灭时</li><li>人工唤醒时</li></ul><p>睡着的body会醒来。</p><pre><code class="hljs angelscript"><span class="hljs-comment">/// 允许睡觉吗？</span><span class="hljs-built_in">bool</span> allowSleep;<span class="hljs-comment">/// 最初睡着/醒着？</span><span class="hljs-built_in">bool</span> awake;</code></pre><p><strong>Fixed Rotation</strong>：</p><p>对于人物角色，你可能希望通过设置使其不能旋转。</p><p>若将fixedRotation设为true，则转动惯量和其逆都将被设为0。</p><pre><code class="hljs angelscript"><span class="hljs-comment">/// 能转喵？</span><span class="hljs-built_in">bool</span> fixedRotation;</code></pre><p><strong>Bullets</strong></p><p>游戏中常常需要生成一系列以一定帧率播放的图片，这也就是所谓的离散模拟。这种模拟中，刚体可能在一个time step里进行了大量移动，这可能会导致tunneling。</p><p>LiquidFun使用CCD来防止tunneling，也即：</p><ul><li>将物体从旧位置移动至新位置，寻找过程中的碰撞；</li><li>计算碰撞的TOI；</li><li>将物体移动到第一次TOI，然后剩余时间悬停；</li></ul><p>一般来说在dynamic bodies之间不会使用CCD（降低成本），但你可能需要这样的操作（子弹穿过dynamic的砖）。</p><p>在LiquidFun中，你可以将高速运动的物体设置为bullets，这样他们就会与static, dynamic的物体都运行CCD。</p><p>注：static/kinematic bodies不会发生tunneling。</p><pre><code class="hljs angelscript"><span class="hljs-comment">/// 高速且dynamic且要防止tunneling吗？</span><span class="hljs-comment">/// 少更改（很耗时）。</span><span class="hljs-built_in">bool</span> bullet;</code></pre><p><strong>Activation</strong></p><p>创造一个物体，但它不参与碰撞/运动。</p><p>与sleeping类似，但不会被碰撞唤醒，它的fixture不会参与broad-phase检测。</p><p>不参与碰撞、ray cast等。</p><p>joint可以附着在未被激活的物体上，这些joint不会参与模拟。</p><p>激活一个joint没有变形的物体要小心（？）。</p><pre><code class="hljs angelscript"><span class="hljs-comment">/// 激活了吗？</span><span class="hljs-built_in">bool</span> active;</code></pre><p><strong>用户数据</strong></p><p>一个空指针，用于链接用户自己的特殊设置。</p><p>应当对所有用户数据使用<strong>同样的一类对象</strong>。</p><pre><code class="hljs sql">/// <span class="hljs-keyword">Use</span> this <span class="hljs-keyword">to</span> <span class="hljs-keyword">store</span> application specific <span class="hljs-keyword">body</span> data.<span class="hljs-built_in">void</span>* userData;</code></pre><p><strong>Gravity Scale</strong></p><p>用于单独调整某个物体受到的重力。增加重力可能影响稳定性。</p><pre><code class="hljs angelscript">    <span class="hljs-comment">/// Scale the gravity applied to this body.</span>    <span class="hljs-built_in">float</span>32 gravityScale;&#125;;</code></pre><h4 id="2-1-2-Body-Factory"><a href="#2-1-2-Body-Factory" class="headerlink" title="2.1.2 Body Factory"></a>2.1.2 Body Factory</h4><p>我们使用world类提供的body factory生成和析构一个物体。</p><pre><code class="hljs c++">b2Body* dynamicBody = myWorld-&gt;CreateBody(&amp;bodyDef);<span class="hljs-comment">/// DO SOMETHING</span>myWorld-&gt;DestroyBody(dynamicBody);dynamicBody = <span class="hljs-literal">NULL</span>;</code></pre><h4 id="2-1-3-一些其他的注意事项"><a href="#2-1-3-一些其他的注意事项" class="headerlink" title="2.1.3 一些其他的注意事项"></a>2.1.3 一些其他的注意事项</h4><p>（1）手动移动static bodies：</p><ul><li><p>要注意不要压扁两个/多个static bodies之间的dynamic bodies。</p></li><li><p>Friction不能正常工作；</p></li><li><p>将多个shape绑定到一个静态物体上要比创造多个静态物体，每个绑定一个shape要快。</p></li><li><p>静态物体的质量和其逆都是0。</p></li></ul><p>（2）删除Bodies:</p><ul><li>LiquidFun allows you to avoid destroying bodies by deleting your b2World object, which does all the cleanup work for you. However, you should be mindful to nullify body pointers that you keep in your game engine. (？)</li><li>删除Body时其上附着的fixture和joint也会被自动删除。</li></ul>]]></content>
    
    
    <categories>
      
      <category>Coding</category>
      
      <category>LiquidFun</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Coding</tag>
      
      <tag>LiquidFun</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Diary: 2020/07/04</title>
    <link href="/2020/07/04/Diary-2020-7/"/>
    <url>/2020/07/04/Diary-2020-7/</url>
    
    <content type="html"><![CDATA[<p>今天更新了头图、社交号、categories、icon等等一系列设置。</p><p>依然没有开始写大作业，sigh。明天一定。</p><p>看到了一个腾讯与一堆音乐学院与清华合作的音乐比赛，决定参加，得把正式录音提上日程了。</p><p>玩会儿OPUS，看会儿书，睡了。</p>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Diary</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Diary: 以雪标记的日子</title>
    <link href="/2020/07/02/Diary-%E4%BB%A5%E9%9B%AA%E6%A0%87%E8%AE%B0%E7%9A%84%E6%97%A5%E5%AD%90/"/>
    <url>/2020/07/02/Diary-%E4%BB%A5%E9%9B%AA%E6%A0%87%E8%AE%B0%E7%9A%84%E6%97%A5%E5%AD%90/</url>
    
    <content type="html"><![CDATA[<blockquote><p>这篇日记写于去年冬天，大抵是北京初雪或第二场雪后。</p></blockquote><p>北京的雪果然是不一样的。</p><p>在这样一场声势浩大的雪面前，所有的譬喻都会失去颜色。</p><p>我在雪的第二天出发，听见自行车轮压扁雪的声响，看见树枝上泛起的白浪，看见所有的一切被这个冬天温柔地抚摸、又诗意地埋葬。风吹过的时候一些雪又从树枝上掉落下来，然后昨天的印记就一点点融化进大地里。在这时，下雪不再是存在而是某种遗忘。</p><p>我不亦乐乎地占有着新雪，我把足迹遍布那些还没有被踩实的雪窝。</p><p>窗外的树很大。透过窗子看一点点掉落下来的雪，像是在看一个重复播放的屏保动画。唯一担心的，是树上的雪不能像电脑里面那样永生永存；一点一点，一点一点，这场雪就温柔地离开了。</p><p>下雪的确是不平凡的事件。我们好像都是靠这些细碎的罕见之事在标记着每一个相似的日子；有时候我们还给它赋予仪式，在一段时间内品尝由这些庆典带来的期望和回味。</p><blockquote><p>此处应该有我去年冬天拍摄的雪景，但好像要搞图床啥的乱七八糟，之后再说。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Diary</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>反思我想不通的几点</title>
    <link href="/2020/07/01/%E5%8F%8D%E6%80%9D-%E8%AE%B0%E5%BD%95%E6%88%91%E6%83%B3%E4%B8%8D%E9%80%9A%E7%9A%84%E5%87%A0%E7%82%B9/"/>
    <url>/2020/07/01/%E5%8F%8D%E6%80%9D-%E8%AE%B0%E5%BD%95%E6%88%91%E6%83%B3%E4%B8%8D%E9%80%9A%E7%9A%84%E5%87%A0%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<p>刘遥这破事断断续续闹了大半夜，我和野合的铁粉朋友一直交流着，真切地经历了这件事的发酵、争论和潦草的收尾（当然，刘遥这个疯批还在继续他的性骚扰“行为艺术”，不知还会不会惹出其他后续）。</p><p>我对于野外合作社并没有像我的朋友那么深的执着，但我的确觉得他们是一支非常、非常、非常、非常好的乐队。王海洋的词曲和表现力，刘遥的吉他，让野合对于音乐主题的各种构想都流通起来：生命力、文学性、自由幻想，呼应着各自奔放。</p><p>如果我没有因为写不下去游戏测评郁闷到打算听会儿摇滚，而是早睡后第二天醒来看到朋友发来的此事各种后续，我也许就只会替野外合作社、替朋友感到无关痛痒的难过和惋惜（从了解刘遥之后，这样的事态发展太过于意料之中了）。但我因为睡不着，看着这件事情一步步演化，看到网友们都说要野合给个交代，看到海洋说找不到人，看到野合说找不到人，看到野合说开除，看到海洋说非要这样么，看到刘遥这个没有心的开了新号继续口头杀人放火，看到第二天早上起来各大音乐博主转载开除声明，看到海洋删博。很难过，真的，很压抑。像看到Freddie滥交、耍大牌、放弃队友，或是看到陈荒赵谬吵架、脆组在facebook发政治言论，就是很压抑。</p><p>这件事情逐步升级，前来围观顺便骂刘遥的人也越来越多，我的态度也就越来越情绪化。</p><p>所以，呼——深呼吸。仔细捋一捋，把其中尽可能多的角度从源头开始厘清。我尽量理性。</p><h3 id="关于性骚扰和炼铜"><a href="#关于性骚扰和炼铜" class="headerlink" title="关于性骚扰和炼铜"></a>关于性骚扰和炼铜</h3><hr><p>尽管刘遥从他发表言论以来就一直是个疯批，这件事的发酵则是由他近一个月来的诡异“养女”言论和其他怪话——更直接地，昨天对未成年演员叶驰敏的性骚扰——引起的。</p><p>（这么一想，刘遥有点像药水。我真的非常好奇这两个人在现实生活中是怎样的。有人说刘遥所指的“养女”是他感情很好的22岁女朋友，有人说刘遥在现实生活中幽默，有人说他沉默。我倒并不相信他会现实生活中遵纪守法，微博只是行为艺术而已。）</p><blockquote><p>关于最基本的论证基础</p><p>首先，我将采用最朴素的道德原则，即：实行权利的前提是不侵害他人的权利。我将认为合理法律的制定是源于这样的原则。但同时，我将保留一定的质疑：社会有权无条件、无偿地要求所有人为公共道德阉割自己吗？</p><p>其次，我也无意使用专业术语论证这件事的法律性质。我的话语仅代表自己粗浅的理性。</p></blockquote><p>好。</p><p><strong>第一点，关于性骚扰。</strong>性骚扰的罪过在于让被骚扰者感到不适。刘遥的言论应该已经完全到达了普遍公众的“不适”标准，因此确实是恶心的性骚扰，这点他活该。</p><p><strong>第二天，关于炼铜。</strong>刘遥的出圈言论是性骚扰+炼铜两大罪过，所以无论如何他被万人唾骂是罪有应得，乐队开除他也是最合理的选择。但我现在撇开刘遥这个个案不谈，仅谈一谈炼铜本身。</p><p>首先，炼铜之罪在于幼女由于身心的不健全，在法律上并不具有性自由（是这样吧？），因此为避免以“爱”为名的诱奸、强奸等违法行为，法律对幼女实行了以限制自由为手段的强制保护。这是非常合理的法律，但在其中有“一刀切”的成分（这存在于许多法律之中，并不意味着法律不恰当），也就意味着有一部分人群的权利受到了抑制。</p><p>假设有一个不能通过与正常年龄人群发生关系获得性快感的恋童癖，他明白他的性癖付诸行为将意味着某个孩子成为受害者，因此他克制、克制。他出于对公共道德的遵循，完全剥夺了自己的性自由。在我的眼里，这是很悲剧也很英雄的事，值得社会为他颁发一块奖章，给他提供定期的生活补助，定时去看望并给他带一束花。</p><p>但在当今时代大概“恋童癖”三个字就是赤裸裸的罪行，如果真出现了这样的人也会受到万人唾骂，与今天刘遥的结局也不会太不同罢。我于是想起来《肌肤》里那个恋童癖父亲，为了不侵犯自己的孩子便远走他乡，再也没有回过家。我觉得很难过。同样的辩护在我的心中对于天生有鲨人、施虐冲动但克制未实施的精神病也成立。</p><p>我在为极少数人心里的恶魔辩护。这有意义么？</p><p><strong>不对，等一下。</strong></p><p>我突然意识到这一情形与某个困扰过我的场景的类似性。</p><p><strong>愚蠢、残疾、丑陋，许多在当今世界会成为不容置疑的缺陷的品质，不也很大程度是天生的么？</strong></p><p>我们从出生之日起都背负着与卡西莫多类似的枷锁，对这样的原罪我们或多或少都无可奈何。我们无辜地降临于世，外貌、智商、家庭、偏好就已经为我们此后的人生之路画下一道道藩篱。只能背负而已。无论是恋童癖，或是不擅长读书，或是出生于恶劣的原生家庭，所有的参数冰冷而无罪，附着到某个个体身上才变成善恶奖惩。</p><p>我们能做的最好的选择就是彼此同情、彼此支撑，但背不住十字架的人还是得下地狱。</p><p>好吧，我释然了一点。</p><h3 id="关于艺术与人品与立场-与网民"><a href="#关于艺术与人品与立场-与网民" class="headerlink" title="关于艺术与人品与立场 与网民"></a>关于艺术与人品与立场 与网民</h3><hr><p>刘遥有病该骂，毋庸置疑。</p><p>但乐队其他成员是无辜的，作品是无辜的。这件事发后，我的第一反应居然是把野合的歌全部下载。</p><p>好悲哀。……。艺术本就不只是为真善美的颂歌，更与立场无关，不是吗。</p><p>我突然想起，在相关微博下看到一条评论，是阴阳怪气说希望刘遥能够进局后继续创造人民群众喜闻乐见的音乐。虽然原po主是在反讽，但我倒觉得，如果哪天他真做了什么需要进局的事儿，这种结局也不错。</p><p>我完全支持大家骂刘遥。我只希望作品不要下架，乐队也不要因此解散。有乐迷因为这件事选择不再听野合也没有关系，别妨碍我继续听就行了。每个人都有价值判断，别按头。</p><p>我感到很难过的一点是，这件事后，野合的评论区就变成了吵架战场。粉丝和前来骂刘遥的网民打成一团，说的话和音乐本身再也无关。</p><p>另外难过的一点是，搜狐新闻发了报道后，大家纷纷在下面评论“根本没听过这种没名气的乐队”。滚圈独树一帜的好乐队连同其作品，因为乐手的行为被贬到一文不值，成为一部分人义愤填膺的靶子，一部分人幸灾乐祸的对象。好多人是在狂欢啊。</p><p>野合的结局不该是这样。海洋该有多愁啊。</p><p>还有，顺便再评论另一件事儿罢。我实名讨厌阴阳怪气的骂人。如果你要骂人傻批或者不道德，那你就骂他傻批或者不道德，阴阳怪气骂人属实让人想吐。</p><p>所以我现在开骂：骂人时随便就咒人死甚至牵扯家人的都是傻批。刘遥傻批。</p><blockquote><p>后半段写于7.2，朋友从刘遥微博小号发的动态怀疑他想不开要自杀。如果他真的死了，无疑是将这场行为艺术风波在任何意义下推向了顶点，这也是我同意他有可能这么做的原因。</p><p>但无论如何，他很有才，他到目前为止所做的傻批事完全不至死，所以我还是希望他能好好活着。</p><p>希望海洋能和他好好谈一谈，希望他们不要闹翻，希望野合以后继续做音乐。我希望着。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Comment</category>
      
      <category>News</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Comment</tag>
      
      <tag>News</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>游戏测评：OPUS 灵魂之桥</title>
    <link href="/2020/06/30/%E6%B8%B8%E6%88%8F%E6%B5%8B%E8%AF%84%EF%BC%9AOPUS-%E7%81%B5%E9%AD%82%E4%B9%8B%E6%A1%A5/"/>
    <url>/2020/06/30/%E6%B8%B8%E6%88%8F%E6%B5%8B%E8%AF%84%EF%BC%9AOPUS-%E7%81%B5%E9%AD%82%E4%B9%8B%E6%A1%A5/</url>
    
    <content type="html"><![CDATA[<p>想了很久，写什么都怪怪的。</p><p>就这样简短地作结吧：</p><ul><li><p>画面很好，是我很喜欢的风格，中间涉及人物对话的动画有点草率；</p></li><li><p>游戏设计也很用心，整个世界历史非常完整；</p></li><li><p>玩法也比较适合我这种无水平选手；</p></li><li><p>音乐没有特别出彩，但很契合剧情；</p></li></ul><p>故事非常、非常、非常棒。最后1h的呈现，让我由衷地想：<strong>如果能做出这样的游戏，就算是997我也愿意</strong>。</p>]]></content>
    
    
    <categories>
      
      <category>Comment</category>
      
      <category>Games</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Comment</tag>
      
      <tag>Games</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Diary: 2020.3.6-4.22</title>
    <link href="/2020/06/30/Diary-2020-3-6-4-22/"/>
    <url>/2020/06/30/Diary-2020-3-6-4-22/</url>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Locked words wait for your command to be unlocked:</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="2107cee15ceabcac4d39b76524f39640a6b6d33c8e914a643580abb9fc8ab6e6"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Diary</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
